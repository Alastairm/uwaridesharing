// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Matches snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <Image
    resizeMode="stretch"
    source={
      Object {
        "uri": "https://fleeteng-static.s3.amazonaws.com/assets/background-081a9027c8c821541bf2d7816138fc87.jpg",
      }
    }
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "bottom": 0,
          "flexDirection": "column",
          "justifyContent": "space-between",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "navy",
            "fontSize": 80,
            "marginTop": "2%",
            "textAlign": "center",
          }
        }
      >
         UniRide 
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "navy",
            "fontSize": 25,
            "textAlign": "center",
          }
        }
      >
         UWA Rideshare 
      </Text>
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          size={20}
          style={
            Object {
              "flex": 20,
              "flexDirection": "column",
            }
          }
        />
        <View
          size={60}
          style={
            Object {
              "flex": 60,
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "stretch",
                "backgroundColor": "transparent",
                "borderColor": "#007aff",
                "borderRadius": 57,
                "borderWidth": 1,
                "elevation": null,
                "flexDirection": "row",
                "height": 60,
                "justifyContent": "center",
                "marginBottom": "5%",
                "marginTop": "5%",
                "opacity": 1,
                "paddingBottom": 6,
                "paddingLeft": 26,
                "paddingRight": 26,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 20,
                }
              }
            >
               Sign In 
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "stretch",
                "backgroundColor": "transparent",
                "borderColor": "#007aff",
                "borderRadius": 57,
                "borderWidth": 1,
                "elevation": null,
                "flexDirection": "row",
                "height": 60,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 6,
                "paddingLeft": 26,
                "paddingRight": 26,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 20,
                }
              }
            >
               Sign Up 
            </Text>
          </View>
        </View>
        <View
          size={20}
          style={
            Object {
              "flex": 20,
              "flexDirection": "column",
            }
          }
        />
      </View>
    </View>
  </Image>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-start",
          "margin": 20,
        }
      }
    >
      <View
        danger={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0,0,0,0.8)",
            "borderRadius": 5,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "minHeight": 50,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          }
        }
        success={false}
        virtual={undefined}
        warning={false}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
      </View>
    </View>
  </Modal>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "height": NaN,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#757575",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
        <RCTScrollView
          dataArray={Array []}
          dataSource={
            ListViewDataSource {
              "items": 0,
            }
          }
          enableEmptySections={true}
          renderRow={[Function]}
          renderScrollComponent={[Function]}
          style={
            Object {
              "marginLeft": -15,
              "marginRight": -15,
              "marginTop": 15,
            }
          }
          virtual={undefined}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;
